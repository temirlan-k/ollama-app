services:
  backend:
    build: .
    environment:
      - PYTHONPATH=/app/src
    ports:
      - "8888:8888"
    env_file:
      - .env
    volumes:
      - .:/app
    command: ["python", "src/bootstrap/main.py"]
    depends_on:
      - postgres
      - redis
      - ollama
      - mongo

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:  "postgres"
    ports:
      - "5440:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollamadata:/root/.ollama

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27027:27017"
    volumes:
      - ./mongo:/data/db

  redis:
    image: redis:alpine
    ports:
      - "6381:6379"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./src/infra/prometheus:/etc/prometheus
      - prometheusdata:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "9091:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  


volumes:
  postgresdata:
  ollamadata:
  prometheusdata:
  grafana-data:

